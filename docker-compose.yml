version: "3.3"
   #Creates overlay trefik_proxy network. Include in the other web services compose-files as: external: true
services:
  traefik:
    image: traefik:v2.0
    restart: always
    container_name: traefik
    ports:
      - "80:80"
    #  - "8080:8080" # traefik dashboard
      - "443:443"
    command:
      - --api.insecure=true # set to 'false' on production
      - --api.dashboard=true 
      - --api.debug=true 
      - --log.level=DEBUG 
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik_proxy
      - --entrypoints.web.address=:80
      - --entrypoints.web-secured.address=:443
      - --certificatesresolvers.mytlschallenge.acme.httpChallenge.entrypoint=web
      - --certificatesresolvers.mytlschallenge.acme.email=pedrogarciafranco@hotmail.com
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`traefik.secandsys.com`)"
        - "traefik.http.routers.api.service=api@internal" # Let the dashboard access the traefik api
      placement:
        constraints: [node.role == manager] 
networks:
   proxy:
     driver: overlay
     attachable: true

volumes:
  letsencrypt:
